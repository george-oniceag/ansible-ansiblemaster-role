repo_epel_path: '/etc/yum.repos.d/epel.repo'
repo_epel_url: 'https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ansible_distribution_major_version}}.noarch.rpm'

# ANSIBLE user definition
conf_ansible_user: ansible      # DEFAULT value: ansible 
conf_ansible_group: ansible     # Default value: ansible
conf_ansible_user_comment: "Ansible Master Connection USER"
conf_ansible_user_home: '/etc/ansible'
# ANSIBLE user SSH key definition
conf_ansible_generate_sshkey: "yes" # <<yes/no>> options; default yes
conf_ansible_sshkey_bits: 4096      # please use power of 2 ; default 4096
conf_ansible_sshkey_comment: 'Ansible MASTER SSH key'
conf_ansible_sshkey_type: 'rsa'    
conf_ansible_sshkey_passwd: "{{vault_ansible_sshkey_passwd|default('password')}}" 
#conf_ansible_generate_sshkey: 'no'
#conf_ansible_user_pubkey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCZf2Dcmt2bZWaGvhgLZkZmC+UbPpW5efbNyKbbDrfrTQYkOSuLPGYaaU7hBGqOKy9bI0o4ZxahaHH+wMmoBx+L6s8sos1AsdkS+6W7rDBkr/q5PJJf6d80X7v4czDpqnVloaASF1WWL8pCuLQvAcDOrJqjPjo3xyhOXyHA/kCE0TJfwBQT78SaOw3Nf4QsDxG6L2npS9qhQw4Soe04iN1EN7OvYo5oFutC7REFzNeIx4PoSMugzgV1I7o9bJ85kE+Ffs0DvwPza2UuKswYBcIFcDAvm1WnjIzHS4AOZ83iTRhpkiTxyKQ29b6IgwkJRXio1L7uo38NVAnsdLEpDijt root@localhost.localdomain'




# ANSIBLE CFG variables
var_ansible_inventory: '/etc/ansible/hosts'   # Default /etc/ansible/hosts - if not defined
var_ansible_mylibrary: '/etc/ansible/library' # Default /etc/ansible/library - if not defined
var_ansible_module_utils: '/etc/ansible/module_utils' #Default /etc/ansible/module_utils - if not defined
var_ansible_remote_tmp: 'ansible/tmp' # Default ~/.ansible/tmp .. the fisrt object are automatically put by the task
var_ansible_local_tmp: 'ansible/tmp'  # Default ~/.ansible/tmp .. the fisrt object are automatically put by the task
var_ansible_forks: 10                 # Default forks of the process - 10
var_ansible_poll_interval: 15         # Defau;t pool_interval - 15
var_ansible_sudo_user: root             
var_ansible_ask_sudo_pass: False      # Default false - recommended value
var_ansible_ask_pass: False           # Default false - recommended value
var_ansible_transport: smart          # Default recommended value
var_ansible_remote_port: 22           # Default remote ssh port
var_ansible_host_key_checking:  False # Default False - options : True/False
var_ansible_sudo_exe: sudo            # Define de sudo execution method - default sudo
var_ansible_ssh_timeout: 10           # Default ssh timeout - 10

var_ansible_persistent_connection:
# Configures the persistent connection timeout value in seconds.  This value is
# how long the persistent connection will remain idle before it is destroyed.
# If the connection doesn't receive a request before the timeout value
# expires, the connection is shutdown.  The default value is 30 seconds.
        connect_timeout: 30
# Configures the persistent connection retries.  This value configures the
# number of attempts the ansible-connection will make when trying to connect
# to the local domain socket.  The default value is 30.
        connect_retries: 30
# Configures the amount of time in seconds to wait between connection attempts
# to the local unix domain socket.  This value works in conjunction with the
# connect_retries value to define how long to try to connect to the local
# domain socket when setting up a persistent connection.  The default value is
# 1 second.
        connect_interval: 1
        
var_ansible_colors:
        highlight       : white
        verbose         : blue
        warn            : bright purple
        error           : red
        debug           : dark gray
        deprecate       : purple
        skip            : cyan
        unreachable     : red
        ok              : green
        changed         : yellow
        diff_add        : green
        diff_remove     : red
        diff_lines      : cyan


# 3 plays will gather facts by default, which contain information about
# # the remote system.
# 3
# # smart - gather by default, but don't regather if already gathered
# # implicit - gather by default, turn off with gather_facts: False
# # explicit - do not gather by default, must say gather_facts: True
var_ansible_gathering: implicit

# # This only affects the gathering done by a play's gather_facts directive,
# # by default gathering retrieves all facts subsets
# # all - gather all subsets
# # network - gather min and network facts
# # hardware - gather hardware facts (longest facts to retrieve)
# # virtual - gather min and virtual facts
# # facter - import facts from facter
# # ohai - import facts from ohai
# # You can combine them using comma (ex: network,virtual)
# # You can negate them using ! (ex: !hardware,!facter,!ohai)
# # A minimal set of facts is always gathered.
var_ansible_gather_subset: all        

# some hardware related facts are collected
# # with a maximum timeout of 10 seconds. This
# # option lets you increase or decrease that
# # timeout to something more suitable for the
# # environment.
var_ansible_gather_timeout: 10

# additional paths to search for roles in, colon separated
var_ansible_role_path: ['/etc/ansible/role']

# Determine whether includes in tasks and handlers are "static" by
# # default. As of 2.0, includes are dynamic by default. Setting these
# # values to True will make includes behave more like they did in the
# # 1.x versions.
var_ansible_task_includes_static: False 
var_ansible_handler_includes_static: False

# Controls if a missing handler for a notification event is an error or a warning
var_ansible_error_on_missing_handler: True

# What flags to pass to sudo
# # WARNING: leaving out the defaults might create unexpected behaviours
#var_ansible_sudo_flags: ['-H','-S','-n']

# logging is off by default unless this path is defined
var_ansible_log_path: '/var/log/ansible'
var_ansible_log_name: ansible
# Logrotate varaibles 
var_ansible_logrotate_interval: daily # Available options : daily/monthly/weekly - default daily
var_ansible_logrotate_compression_enabled: 'yes' # Available options yes/no - default yes
#var_ansible_logrotate_compression_command: 'gzip' 
#var_ansible_logrotate_compression_options: '-9'
#var_ansible_logrotate_extension: '.gz'
#var_ansible_logrotate_method: 'copytruncate'
#var_ansible_logrotate_rtcount: 5
#var_ansible_logrotate_size: 100M
#var_ansible_logrotate_create: 
#       owner:
#       group:
#       mode: 
#var_ansible_logrotate_mail:
#       address:
#       what_to_mail: <<mailfirst/maillast>>
#var_ansible_logrotate_missingok: yes
#var_ansible_logrotate_olddir: <path>
#var_ansible_logrotate_postrotate:
#               - 'lines'
#var_ansible_logrotate_prerotate:
#               - 'lines'
#var_ansible_logrotate_lastaction:
#               - 'lines'
#var_ansible_logrotate_sharedscripts: yes/no


# default module name for /usr/bin/ansible
var_ansible_module_name: command 

# use this shell for commands executed under sudo
# # you may need to change this to bin/bash in rare instances
# # if sudo is constrained
var_ansible_executable: '/bin/sh'

# if inventory variables overlap, does the higher precedence one win
# or are hash values merged together?  The default is 'replace' but
# this can also be set to 'merge'.
# #hash_behaviour = replace
var_ansible_hash_behaviour: replace

# by default, variables from roles will be visible in the global variable
# scope. To prevent this, the following option can be enabled, and only
# tasks and handlers within the role will see the variables there
var_ansible_private_role_vars: no

# list any Jinja2 extensions to enable here:
#var_ansible_jinja2_extensions = jinja2.ext.do,jinja2.ext.i18n

# if set, always use this private key file for authentication, same as
# if passing --private-key to ansible or ansible-playbook
#var_ansible_private_key_file: /path/to/file

# If set, configures the path to the Vault password file as an alternative to
# specifying --vault-password-file on the command line.
#var_ansible_vault_password_file: /path/to/vault_password_file

# format of string {{ ansible_managed }} available within Jinja2
# templates indicates to users editing templates files will be replaced.
# replacing {file}, {host} and {uid} and strftime codes with proper values.
#ansible_managed = Ansible managed: {file} modified on %Y-%m-%d %H:%M:%S by {uid} on {host}
# {file}, {host}, {uid}, and the timestamp can all interfere with idempotence
# in some situations so the default is a static string:
var_ansible_managed: 'Ansible managed by {uid} on {host}'

# by default, ansible-playbook will display "Skipping [host]" if it determines a task
# should not be run on a host.  Set this to "False" if you don't want to see these "Skipping"
# messages. NOTE: the task header will still be shown regardless of whether or not the
# task is skipped.
var_ansible_display_skipped_hosts: 'True'

# by default, if a task in a playbook does not include a name: field then
# ansible-playbook will construct a header that includes the task's action but
# not the task's args.  This is a security feature because ansible cannot know
# if the *module* considers an argument to be no_log at the time that the
# header is printed.  If your environment doesn't have a problem securing
# stdout from ansible-playbook (or you have manually specified no_log in your
# playbook on all of the tasks where you have secret information) then you can
# safely set this to True to get more informative messages.
var_ansible_display_args_to_stdout: 'False'

# by default (as of 1.3), Ansible will raise errors when attempting to dereferenciate
# Jinja2 variables that are not set in templates or action lines. Uncomment this line
# to revert the behavior to pre-1.3.
#var_ansible_error_on_undefined_vars: 'False'

# by default (as of 1.6), Ansible may display warnings based on the configuration of the
# system running ansible itself. This may include warnings about 3rd party packages or
# other conditions that should be resolved if possible.
# to disable these warnings, set the following value to False:
#var_ansible_system_warnings: 'True'

# by default (as of 1.4), Ansible may display deprecation warnings for language
# features that should no longer be used and will be removed in future versions.
# to disable these warnings, set the following value to False:
var_ansible_deprecation_warnings: 'True'

# (as of 1.8), Ansible can optionally warn when usage of the shell and
# command module appear to be simplified by using a default Ansible module
# instead.  These warnings can be silenced by adjusting the following
# setting or adding warn=yes or warn=no to the end of the command line
# parameter string.  This will for example suggest using the git module
# instead of shelling out to the git command.
var_ansible_command_warnings: 'False'

# set plugin path directories here, separate with colons
#var_ansible_plugins_directories: 
#       action_plugins     : ['/usr/share/ansible/plugins/action']
#       cache_plugins      : ['/usr/share/ansible/plugins/cache']
#       callback_plugins   : ['/usr/share/ansible/plugins/callback']
#       connection_plugins : ['/usr/share/ansible/plugins/connection']
#       lookup_plugins     : ['/usr/share/ansible/plugins/lookup']
#       inventory_plugins  : ['/usr/share/ansible/plugins/inventory']
#       vars_plugins       : ['/usr/share/ansible/plugins/vars']
#       filter_plugins     : ['/usr/share/ansible/plugins/filter']
#       test_plugins       : ['/usr/share/ansible/plugins/test']
#       terminal_plugins   : ['/usr/share/ansible/plugins/terminal']
#       strategy_plugins   : ['/usr/share/ansible/plugins/strategy']

# by default, ansible will use the 'linear' strategy but you may want to try
# # another one
#var_ansible_strategy: free

# by default callbacks are not loaded for /bin/ansible, enable this if you
# want, for example, a notification or logging callback to also apply to
# /bin/ansible runs
var_bin_ansible_callbacks: 'False'

# don't like cows?  that's unfortunate.
# set to 1 if you don't want cowsay support or export ANSIBLE_NOCOWS=1
#var_ansible_nocows: 1

# set which cowsay stencil you'd like to use by default. When set to 'random',
# a random stencil will be selected for each task. The selection will be filtered
# against the `cow_whitelist` option below.
#var_ansbile_cow_selection: default #or random

# when using the 'random' option for cowsay, stencils will be restricted to this list.
# it should be formatted as a comma-separated list with no spaces between names.
# NOTE: line continuations here are for formatting purposes only, as the INI parser
#       in python does not support them.
#var_ansible_cow_whitelist:bud-frogs,bunny,cheese,daemon,default,dragon,elephant-in-snake,elephant,eyes,\
#                          hellokitty,kitty,luke-koala,meow,milk,moofasa,moose,ren,sheep,small,stegosaurus,\
#                          stimpy,supermilker,three-eyes,turkey,turtle,tux,udder,vader-koala,vader,www
#var_ansible_cow_whitelist: ['bud-frogs','buny',... ]

# don't like colors either?
# set to 1 if you don't want colors, or export ANSIBLE_NOCOLOR=1
#var_ansible_nocolor: 1

# if set to a persistent type (not 'memory', for example 'redis') fact values
# from previous runs in Ansible will be stored.  This may be useful when
# wanting to use, for example, IP information from one group of servers
# without having to talk to them in the same playbook run to get their
# current IP information.
var_ansible_fact_caching: memory

# retry files
# When a playbook fails by default a .retry file will be created in ~/
# You can disable this feature by setting retry_files_enabled to False
# and you can change the location of the files by setting retry_files_save_path
#
#var_ansible_retry_files_enabled: 'False'
#var_ansible_retry_files_save_path: '~/.ansible-retry'

# squash actions
# Ansible can optimise actions that call modules with list parameters
# when looping. Instead of calling the module once per with_ item, the
# module is called once with all items at once. Currently this only works
# under limited circumstances, and only with parameters named 'name'.
#var_ansible_squash_actions: ['apk','apt','dnf','homebrew','pacman','pkgng','yum','zypper']

# prevents logging of task data, off by default
var_ansible_no_log:  'False'

# prevents logging of tasks, but only on the targets, data is still logged on the master/controller
var_ansible_no_target_syslog: 'False'

# controls whether Ansible will raise an error or warning if a task has no
# choice but to create world readable temporary files to execute a module on
# the remote machine.  This option is False by default for security.  Users may
# turn this on to have behaviour more like Ansible prior to 2.1.x.  See
# https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
# for more secure ways to fix this than enabling this option.
var_ansible_allow_world_readable_tmpfiles: 'False'

# controls the compression level of variables sent to
# worker processes. At the default of 0, no compression
# is used. This value must be an integer from 0 to 9.
var_ansible_var_compression_level: 0

# controls what compression method is used for new-style ansible modules when
# they are sent to the remote system.  The compression types depend on having
# support compiled into both the controller's python and the client's python.
# The names should match with the python Zipfile compression types:
# * ZIP_STORED (no compression. available everywhere)
# * ZIP_DEFLATED (uses zlib, the default)
# These values may be set per host via the ansible_module_compression inventory
# variable
#var_ansible_module_compression: 'ZIP_DEFLATED'

# This controls the cutoff point (in bytes) on --diff for files
# # set to 0 for unlimited (RAM may suffer!).
#var_ansible_max_diff_size: 1048576

# This controls how ansible handles multiple --tags and --skip-tags arguments
# on the CLI.  If this is True then multiple arguments are merged together.  If
# it is False, then the last specified argument is used and the others are ignored.
#var_ansible_merge_multiple_cli_flags = False

# Controls showing custom stats at the end, off by default
var_ansible_show_custom_stats: 'False'

# Controlls which files to ignore when using a directory as inventory with
# possibly multiple sources (both static and dynamic)
#inventory_ignore_extensions = ~, .orig, .bak, .ini, .cfg, .retry, .pyc, .pyo
var_ansible_inventory_ignore_extensions: ['.orig','.bak','.ini','.cfg','.retry','.pyc','.pyo']

#[privilege_escalation]
var_ansible_privilege_escalation:
        become: 'False'
        becom_method: sudo
        become_user: root
        become_ask_pass: 'False'

#[paramiko_connection]
# uncomment this line to cause the paramiko connection plugin to not record new host
# keys encountered.  Increases performance on new host additions.  Setting works independently of the
# host key checking setting above.
var_ansible_record_host_keys: 'False'

# by default, Ansible requests a pseudo-terminal for commands executed under sudo. Uncomment this
# line to disable this behaviour.
#var_ansible_pty: 'False'

# paramiko will default to looking for SSH keys initially when trying to
# authenticate to remote devices.  This is a problem for some network devices
# that close the connection after a key failure.  Uncomment this line to
# disable the Paramiko look for keys function
#var_ansible_look_for_keys: 'False'

# When using persistent connections with Paramiko, the connection runs in a
# background process.  If the host doesn't already have a valid SSH key, by
# default Ansible will prompt to add the host key.  This will cause connections
# running in background processes to fail.  Uncomment this line to have
# Paramiko automatically add host keys.
#var_ansible_host_key_auto_add: 'True'


#[ssh_connection]

# ssh arguments to use
# Leaving off ControlPersist will result in poor performance, so use
# paramiko on older platforms rather than removing it, -C controls compression use
#var_ansible_ssh_args = -C -o ControlMaster=auto -o ControlPersist=60s

# Enabling pipelining reduces the number of SSH operations required to
# execute a module on the remote server. This can result in a significant
# performance improvement when enabled, however when using "sudo:" you must
# first disable 'requiretty' in /etc/sudoers
#
# By default, this option is disabled to preserve compatibility with
# sudoers configurations that have requiretty (the default on many distros).
var_ansible_pipelining: 'True'

# Control the mechanism for transferring files (old)
#   * smart = try sftp and then try scp [default]
#   * True = use scp only
#   * False = use sftp only
#var_ansible_scp_if_ssh: 'smart'

# Control the mechanism for transferring files (new)
# If set, this will override the scp_if_ssh option
#   * sftp  = use sftp to transfer files
#   * scp   = use scp to transfer files
#   * piped = use 'dd' over SSH to transfer files
#   * smart = try sftp, scp, and piped, in that order [default]
var_ansible_transfer_method: 'smart'

# if False, sftp will not use batch mode to transfer files. This may cause some
# types of file transfer failures impossible to catch however, and should
# only be disabled if your sftp version has problems with batch mode
#var_ansiblesftp_batch_mode: 'False'








